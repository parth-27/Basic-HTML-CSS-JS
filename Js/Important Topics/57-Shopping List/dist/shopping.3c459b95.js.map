{"version":3,"sources":["shopping.js"],"names":["shoppingForm","document","querySelector","list","items","handleSubmit","e","preventDefault","name","currentTarget","item","value","id","Date","now","compelete","push","console","log","length","reset","dispatchEvent","CustomEvent","displayItems","html","map","join","innerHTML","mirrorToLocalStorage","localStorage","setItem","JSON","stringify","restoreFromLocalStorage","lsItem","parse","getItem","addEventListener"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAArB;AACA,IAAMC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb,EAEA;;AACA,IAAIE,KAAK,GAAG,EAAZ,EAAkB;;AAGlB,SAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,EAAAA,CAAC,CAACC,cAAF,GADoB,CACI;;AAExB,MAAMC,IAAI,GAAGF,CAAC,CAACG,aAAF,CAAgBC,IAAhB,CAAqBC,KAAlC;AACA,MAAG,CAACH,IAAJ,EAAU,OAJU,CAIA;;AACpB,MAAME,IAAI,GAAG;AACTF,IAAAA,IAAI,EAAGA,IADE;AAETI,IAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EAFM;AAGTC,IAAAA,SAAS,EAAC;AAHD,GAAb;AAKAX,EAAAA,KAAK,CAACY,IAAN,CAAWN,IAAX;AACAO,EAAAA,OAAO,CAACC,GAAR,yBAA6Bd,KAAK,CAACe,MAAnC,qBAXoB,CAapB;;AACAb,EAAAA,CAAC,CAACG,aAAF,CAAgBW,KAAhB,GAdoB,CAgBpB;;AACAjB,EAAAA,IAAI,CAACkB,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,cAAhB,CAAnB;AACH;;AAED,SAASC,YAAT,GAAuB;AAEnB,MAAMC,IAAI,GAAGpB,KAAK,CAACqB,GAAN,CAAU,UAAAf,IAAI,EAAI;AAC3B,uHAEyBA,IAAI,CAACF,IAF9B;AAKH,GANY,EAMVkB,IANU,CAML,EANK,CAAb;AAOAvB,EAAAA,IAAI,CAACwB,SAAL,GAAiBH,IAAjB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACH;;AAED,SAASI,oBAAT,GAA+B;AAC3B;AACA;AAEA;AACA;AAEAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe5B,KAAf,CAA7B,EAP2B,CAO8B;AAC5D,EAED;;;AAEA,SAAS6B,uBAAT,GAAmC;AAC/B,MAAMC,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CAAf;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;;AACA,MAAIA,MAAM,CAACf,MAAX,EAAmB;AACff,IAAAA,KAAK,GAAG8B,MAAR;AACA/B,IAAAA,IAAI,CAACkB,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,cAAhB,CAAnB;AACH;AACJ;;AAEDtB,YAAY,CAACqC,gBAAb,CAA8B,QAA9B,EAAuChC,YAAvC;AAEAF,IAAI,CAACkC,gBAAL,CAAsB,cAAtB,EAAqCd,YAArC;AACApB,IAAI,CAACkC,gBAAL,CAAsB,cAAtB,EAAqCT,oBAArC;AAEAK,uBAAuB,IAAQ","file":"shopping.3c459b95.js","sourceRoot":"..","sourcesContent":["const shoppingForm = document.querySelector('.shopping');\nconst list = document.querySelector('.list');\n\n// we need an array to hold our state.\nlet items = [];   // state is a bunch of data that reflects the state of our applications.\n\n\nfunction handleSubmit(e){\n    e.preventDefault();     // preventing from doing its default function.\n\n    const name = e.currentTarget.item.value;\n    if(!name) return;   // for not allowing to enter blank values. If empty than don't submit it.\n    const item = {\n        name : name,\n        id:Date.now(),\n        compelete:false,\n    }\n    items.push(item);\n    console.log(`There are now ${items.length} in your state`);\n\n    // clear the form.\n    e.currentTarget.reset();\n    \n    // fire of a custom event that will tell anyone else who cares that the items have been updated.\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction displayItems(){\n\n    const html = items.map(item => {\n        return `<li class=\"shopping-item\">\n        <input type=\"checkbox\">\n        <span class=\"itemName\">${item.name}</span>\n        <button aria-label=\"Remove\">&times;</button>\n        </li>`;\n    }).join('');\n    list.innerHTML = html;\n    console.log(html);\n}\n\nfunction mirrorToLocalStorage(){\n    // converting object to string we use JSON.\n    //JSON.stringify(object);\n\n    // from string to object.\n    // JSON.parse(string)\n\n    localStorage.setItem('items',JSON.stringify(items));     // converting items to string and than storing into the local storage.\n}\n\n// getting values from local storage.\n\nfunction restoreFromLocalStorage() {\n    const lsItem = JSON.parse(localStorage.getItem('items'));\n    console.log(lsItem);\n    if (lsItem.length) {\n        items = lsItem;\n        list.dispatchEvent(new CustomEvent('itemsUpdated'));\n    }\n}\n\nshoppingForm.addEventListener('submit',handleSubmit);\n\nlist.addEventListener('itemsUpdated',displayItems);\nlist.addEventListener('itemsUpdated',mirrorToLocalStorage);\n\nrestoreFromLocalStorage();     // will run from page load."]}