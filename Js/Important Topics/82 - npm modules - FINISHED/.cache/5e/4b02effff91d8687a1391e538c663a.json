{"id":"node_modules/lodash-es/matches.js","dependencies":[{"name":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/package.json","includedInParent":true,"mtime":1590919584155},{"name":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/node_modules/lodash-es/package.json","includedInParent":true,"mtime":1590919583875},{"name":"./_baseClone.js","loc":{"line":1,"column":22},"parent":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/node_modules/lodash-es/matches.js","resolved":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/node_modules/lodash-es/_baseClone.js"},{"name":"./_baseMatches.js","loc":{"line":2,"column":24},"parent":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/node_modules/lodash-es/matches.js","resolved":"/home/pal/Desktop/FrontEnd/Js/Important Topics/82 - npm modules - FINISHED/node_modules/lodash-es/_baseMatches.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseClone = _interopRequireDefault(require(\"./_baseClone.js\"));\n\nvar _baseMatches = _interopRequireDefault(require(\"./_baseMatches.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n */\n\nfunction matches(source) {\n  return (0, _baseMatches.default)((0, _baseClone.default)(source, CLONE_DEEP_FLAG));\n}\n\nvar _default = matches;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":5,"column":0}},{"name":"CLONE_DEEP_FLAG","generated":{"line":15,"column":4},"source":"node_modules/lodash-es/matches.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":19},"source":"node_modules/lodash-es/matches.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":22},"source":"node_modules/lodash-es/matches.js","original":{"line":5,"column":22}},{"generated":{"line":15,"column":23},"source":"node_modules/lodash-es/matches.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":7,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":0}},{"name":"matches","generated":{"line":45,"column":9},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":9}},{"generated":{"line":45,"column":16},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":0}},{"name":"source","generated":{"line":45,"column":17},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":17}},{"generated":{"line":45,"column":23},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":0}},{"generated":{"line":45,"column":25},"source":"node_modules/lodash-es/matches.js","original":{"line":35,"column":25}},{"generated":{"line":46,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":2}},{"generated":{"line":46,"column":9},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":9}},{"generated":{"line":46,"column":35},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":21}},{"name":"source","generated":{"line":46,"column":59},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":31}},{"generated":{"line":46,"column":65},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":21}},{"name":"CLONE_DEEP_FLAG","generated":{"line":46,"column":67},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":39}},{"generated":{"line":46,"column":82},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":21}},{"generated":{"line":46,"column":83},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":9}},{"generated":{"line":46,"column":84},"source":"node_modules/lodash-es/matches.js","original":{"line":36,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/lodash-es/matches.js","original":{"line":37,"column":1}},{"name":"matches","generated":{"line":49,"column":15},"source":"node_modules/lodash-es/matches.js","original":{"line":39,"column":15}}],"sources":{"node_modules/lodash-es/matches.js":"import baseClone from './_baseClone.js';\nimport baseMatches from './_baseMatches.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nexport default matches;\n"},"lineCount":null}},"error":null,"hash":"b6b550679b5e90f154f971f6edd4125c","cacheData":{"env":{}}}